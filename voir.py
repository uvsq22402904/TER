from sqlalchemy import create_engine, MetaData, Table
from sqlalchemy.orm import sessionmaker


DATABASE_URI = 'sqlite:///Sortie.db'  
#DATABASE_URI = 'sqlite:///example.db' 

#Connexion et r√©cup√©ration des m√©tadonn√©es
engine = create_engine(DATABASE_URI)
metadata = MetaData()
metadata.reflect(bind=engine)

#Cr√©ation d'une session
Session = sessionmaker(bind=engine)
session = Session()

def afficher_donnees():
    """Affiche les donn√©es de toutes les tables de la base."""
    for table_name, table in metadata.tables.items():
        print(f"\nüìå Donn√©es de la table {table_name}:")
        # Ex√©cuter une requ√™te pour r√©cup√©rer toutes les lignes de la table
        with engine.connect() as connection:
            result = connection.execute(table.select())
            rows = result.fetchall()
            if rows:
                for row in rows:
                    print(dict(zip(result.keys(), row)))
            else:
                print("‚ö†Ô∏è Aucune donn√©e trouv√©e.")

def afficher_relations():
    """Affiche les relations entre les tables via les cl√©s √©trang√®res."""
    print("\nüîó Relations entre les tables:")
    for table in metadata.tables.values():
        for fk in table.foreign_keys:
            print(f"üîÑ {table.name}.{fk.parent.name} ‚Üí {fk.column.table.name}.{fk.column.name}")

#Ex√©cuter l'affichage
afficher_donnees()
afficher_relations()

#Fermer la session
session.close()
